apiVersion: kro.run/v1alpha1
kind: ResourceGroup
metadata:
    name: web-application
spec:
    schema:
        apiVersion: v1alpha1
        kind: WebApplication
        spec:
            name: string | required=true description="Application name"
            image: string | required=true description="Container image"
            replicas: integer | default=1 description="Number of replicas"
            port: integer | default=80 description="Container port"
            
            resources:
                requests:
                    cpu: string | default="50m"
                    memory: string | default="64Mi"
                limits:
                    cpu: string | default="100m"
                    memory: string | default="128Mi"
            
            service:
                type: string | default="ClusterIP"
            
            ingress:
                enabled: boolean | default=false
                host: string | default="example.com"
                path: string | default="/"

        status:
            replicas: ${deployment.spec.replicas}
            serviceEndpoint: ${service.spec.clusterIP}
            ingressHost: ${ingress.spec.rules[0].host}
    resources:
        - id: deployment
          template:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
                labels:
                    app: ${schema.spec.name}
                name: ${schema.spec.name}
            spec:
                replicas: ${schema.spec.replicas}
                selector:
                    matchLabels:
                        app: ${schema.spec.name}
                template:
                    metadata:
                        labels:
                            app: ${schema.spec.name}
                    spec:
                        containers:
                            - name: ${schema.spec.name}
                              image: ${schema.spec.image}
                              ports:
                                - containerPort: ${schema.spec.port}
                              resources:
                                requests:
                                    cpu: ${schema.spec.resources.requests.cpu}
                                    memory: ${schema.spec.resources.requests.memory}
                                limits:
                                    cpu: ${schema.spec.resources.limits.cpu}
                                    memory: ${schema.spec.resources.limits.memory}
        - id: service
          template:
            apiVersion: v1
            kind: Service
            metadata:
                name: ${schema.spec.name}-svc
            spec:
                ports:
                    - port: ${schema.spec.port}
                      targetPort: ${schema.spec.port}
                selector:
                    app: ${schema.spec.name}
                type: ${schema.spec.service.type}
        - id: ingress
          template:
            apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
                name: ${schema.spec.name}-ingress
            spec:
                rules:
                    - host: ${schema.spec.ingress.host}
                      http:
                        paths:
                            - backend:
                                service:
                                    name: ${schema.spec.name}-svc
                                    port:
                                        number: ${schema.spec.port}
                              path: ${schema.spec.ingress.path}
                              pathType: Prefix
          includeWhen:
            - ${schema.spec.ingress.enabled}
